import java.io.*;
import java.util.*;
import java.nio.file.*;

public class Main {

    public static void readFile(String fileName) {
        File file = new File(fileName);
        if (!file.exists()) {
            System.out.println("The file does not exist.");
            return;
        }

        try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = br.readLine()) != null) {
                System.out.println(line);
            }
        } catch (IOException e) {
            System.out.println("An error occurred while reading the file: " + e.getMessage());
        }
    }

    public static void writeFile(String fileName, String content) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName))) {
            bw.write(content);
            System.out.println("Data written to the file successfully.");
        } catch (IOException e) {
            System.out.println("An error occurred while writing to the file: " + e.getMessage());
        }
    }

    public static void appendToFile(String fileName, String content) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName, true))) {
            bw.write(content);
            System.out.println("Data appended to the file successfully.");
        } catch (IOException e) {
            System.out.println("An error occurred while appending to the file: " + e.getMessage());
        }
    }

    public static void modifyFile(String fileName, int lineNumber, String newContent) {
        File file = new File(fileName);
        if (!file.exists()) {
            System.out.println("The file does not exist.");
            return;
        }

        try {
            List<String> lines = new ArrayList<>(Files.readAllLines(file.toPath()));
            if (lineNumber > lines.size() || lineNumber <= 0) {
                System.out.println("Invalid line number.");
                return;
            }

            lines.set(lineNumber - 1, newContent);
            Files.write(file.toPath(), lines, StandardOpenOption.WRITE, StandardOpenOption.TRUNCATE_EXISTING);
            System.out.println("File modified successfully.");
        } catch (IOException e) {
            System.out.println("An error occurred while modifying the file: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the file name (with extension): ");
        String fileName = sc.nextLine();

        while (true) {
            System.out.println("\nFile Operations Menu:");
            System.out.println("1. Read File");
            System.out.println("2. Write to File");
            System.out.println("3. Append to File");
            System.out.println("4. Modify File");
            System.out.println("5. Exit");
            System.out.print("Choose an operation (1-5): ");
            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1:
                    readFile(fileName);
                    break;
                case 2:
                    System.out.print("Enter content to write to the file: ");
                    String contentToWrite = sc.nextLine();
                    writeFile(fileName, contentToWrite);
                    break;
                case 3:
                    System.out.print("Enter content to append to the file: ");
                    String contentToAppend = sc.nextLine();
                    appendToFile(fileName, contentToAppend);
                    break;
                case 4:
                    System.out.print("Enter the line number to modify: ");
                    int lineNumber = sc.nextInt();
                    sc.nextLine();
                    System.out.print("Enter the new content for the line: ");
                    String newContent = sc.nextLine();
                    modifyFile(fileName, lineNumber, newContent);
                    break;
                case 5:
                    System.out.println("Exiting the program.");
                    sc.close();
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
